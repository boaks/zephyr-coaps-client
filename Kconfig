#
# Copyright (c) 2022 Achim Kraus CloudCoap.net
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#

menu "CoAP tinyDTLS Settings"

config COAP_SERVER_HOSTNAME
	string "CoAP server hostname."
	default "californium.eclipseprojects.io"

config COAP_SERVER_ADDRESS_STATIC
	string "CoAP server IP address (alternative, if DNS is not available)."
	default "20.47.97.44"

config COAP_SERVER_PORT
	int "CoAP server port number (DTLS)."
	default "5684"

config DTLS_PSK_IDENTITY
	string "CoAP/DTLS PSK identity."
	default "cali.${imei}"
	help
	   "${imei}" is replaced by the modem's IMEI.
	   This only work with Californium's PlugTestServer,
	   which implements "wildcard" identities to
	   make it easier to connect.
	   Don't use this on production or other security
	   relevant use-cases. 

config DTLS_PSK_SECRET
	string "CoAP/DTLS PSK secret."
	default ".fornium"
	help
	   This only work with Californium's PlugTestServer,
	   and the "cali.*" wildcard identity.
	   Don't use this on production or other security
	   relevant use-cases. 

config COAP_SEND_INTERVAL
	int "CoAP send interval in seconds. 0 disable"
	default 0

config COAP_WAKEUP_SEND_INTERVAL
	int "Wakeup CoAP send interval in seconds. 0 disable."
	default 3500
	depends on UDP_PSM_ENABLE
	help
	   Using PSM (Power Sleeping Mode) the modem frequently wakesup to refresh
	   the network registration. This interval is used to exchange messages
	   piggybacked on such an wakeup. The interval doesn't trigger such a wakeup,
	   so it's usully chosen a little smaller than the PSM interval.
	   Ignored, if COAP_SEND_INTERVAL is enabled.

config COAP_RESOURCE
	string "CoAP resource - defaults to Californium's echo resource"
	default "echo"

config COAP_QUERY_DELAY_ENABLE
	bool "Enable CoAP query - delay=%d (delay response)"
	default n

config COAP_QUERY_KEEP_ENABLE
	bool "Enable CoAP query - keep (keep payload)"
	default y

config COAP_QUERY_ACK_ENABLE
	bool "Enable CoAP query - ack (request separate response)"
	default n

config COAP_WAIT_ON_POWERMANAGER
	bool "Enable CoAP to wait for power-manager before sending"
	default n
	help
	   On startup, the power manager takes up to 30s to get the first 
	   battery values. Delay exchanging application message until that.

endmenu

menu "Modem Settings"
config UDP_PSM_ENABLE
	bool "Enable LTE Power Saving Mode"
	default y

config UDP_RAI_ENABLE
	bool "Enable LTE Release Assistance Indication"
	default y

config MODEM_SAVE_CONFIG_THRESHOLD
	int "Modem save configuration threshold in seconds. 0s, don't save, 1s always save. Default 60s"
	default 60
	help
	   If the initial network connect takes more than the threshold,
	   the modem is short switched off and on again in order to save
	   the configuration. This speeds up the next start.

endmenu

menu "Extra Functions"

config LOCATION_ENABLE
	bool "Enable GNSS Location"
	default n
	depends on LTE_NETWORK_MODE_LTE_M_NBIOT_GPS || LTE_NETWORK_MODE_LTE_M_GPS || LTE_NETWORK_MODE_NBIOT_GPS
	help
	   Enable GNSS location. Early development stage.
	   Does not support A-GPS for now. To start GNSS,
	   place the Thingy:91 outside in an open space.
	   Once the almanac data is downloaded from satelites, 
	   positions are start to be reported.

config LOCATION_ENABLE_CONTINUES_MODE
	bool "Enable GNSS Location Continues Mode"
	default y
	depends on LOCATION_ENABLE
	help
	   Enable GNSS location to run continues.
	   Without A-GPS the best positions are achieved
	   when the GPS runs mostly continuesly.
	   This requires a high current of 50mA!  

config LOCATION_ENABLE_TRIGGER_MESSAGE
	bool "Enable GNSS Location Triggers Message"
	default n
	depends on !LOCATION_ENABLE_CONTINUES_MODE && LOCATION_ENABLE
	help
	   Enable GNSS location to trigger a message

if SENSOR

if ADP536X

config ADP536X_POWER_MANAGEMENT
	bool "Enable ADP536X Power Management"
	default y
	help
	   Enable battery level and charging state monitor.

endif # ADP536X

if ADXL362

config ADXL362_MOTION_DETECTION
	bool "Enable ADXL362 Motion Detection"
	default n
	help
	   Enable (indirect) motion detection using accelerometer.
	   More configuration options are available at 
	   "Zephyr Kernel > Device Drivers > Sensor Drivers > ADXL362 sensor"

if ADXL362_MOTION_DETECTION

config ADXL362_MOTION_DETECTION_LED
	bool "Enable ADXL362 Motion Detection LED"
	default n
	help
	   Enable LED to signal motion detection using accelerometer.

endif # ADXL362_MOTION_DETECTION

endif # ADXL362

config BME680_BSEC
	bool "BME680 BSEC"
	depends on !BME680
	help
	  Use BME680 with Bosch BSEC library (IAQ Index Air Quality).
	  The library itself must be downloaded from Bosch Sensortec
	  and placed in "<ncs>/nrf/ext/BSEC_1.4.8.0_Generic_Release_updated_v3"
	  Disable "Zephyr Kernel > Device Drivers > Sensor Drivers > BME680 sensor"
	  in order to use the BME680 with the Bosch BSEC library! Enable 
	  the BME680 sensor to use it without the Bosch BSEC library! 

if BME680_BSEC

config BME680_BSEC_THREAD_STACK_SIZE
	int "BSEC thread stack size"
	default 4096

choice BME680_BSEC_SAMPLE_MODE
	prompt "Bosch BSEC sample mode"
	default BME680_BSEC_SAMPLE_MODE_LOW_POWER
	help
	  Configure sample interval. BSEC support 3s or 300s

config BME680_BSEC_SAMPLE_MODE_LOW_POWER
	bool "BSEC low power mode"
	help
	  Sample data from BSEC every 0.33333 Hz (3 second interval).

config BME680_BSEC_SAMPLE_MODE_ULTRA_LOW_POWER
	bool "BSEC low ultra power mode"
	help
	  Sample data from BSEC every 0.0033333 Hz (300 second interval).

endchoice # BME680_BSEC_SAMPLE_MODE

endif # BME680_BSEC

if BME680_BSEC || BME680

config BME680_TEMPERATURE_OFFSET
	int "BME680 temperature offset in degree celsius multiplied by 100."
	default 120 if BOARD_THINGY91_NRF9160_NS
	default 100
	help
	  BME680 temperature offset. To account for external heat sources on the board.
	  The provided value is divided by 100. This is due to the Kconfig parser
	  not supporting floating point types.
	  The default value 120 is translated to 1.2 degrees celsius offset.

endif # BME680_BSEC || BME680

if BME680

config BME680_SAMPLE_INTERVAL_S
	int "BME680 minimal sample interval in seconds"
	default 10

endif # BME680

endif # SENSOR

config SHT21
	bool "SHT21 external temperature sensor"
	depends on I2C && !BME680 && !BME680_BSEC
	help
	  Use external SHT21 for temperature. 

endmenu

# Logging
module = COAP_CLIENT
module-str = CoAP Client
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

if LOCATION_ENABLE
module = GNSS_CLIENT
module-str = GNSS Client
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif

source "${ZEPHYR_BASE}/subsys/logging/Kconfig.formatting"

menu "Zephyr Kernel"
source "Kconfig.zephyr"
endmenu
