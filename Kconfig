#
# Copyright (c) 2022 Achim Kraus CloudCoap.net
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#

config ALL_POWER_OFF
	bool "Switchign off, only test quiescent current"

config INIT_SETTINGS
	bool "Initialize settings, including CoAP/DTLS 1.2 CID Service"
    help
	  The settings are only initialized the first time
	  the application access the settings after flasing
	  with --chiperase.

if (INIT_SETTINGS)
menu "CoAP/DTLS 1.2 CID Service Settings"

config COAP_SCHEME
	string "CoAP server scheme."
	default "coaps"

config COAP_SERVER_HOSTNAME
	string "CoAP server hostname."
	default "californium.eclipseprojects.io"

config COAP_SERVER_ADDRESS_STATIC
	string "CoAP server IP address (alternative, if DNS is not available)."
	default "20.47.97.44"

config COAP_SERVER_PORT
	int "CoAP server port number (UDP/TCP)."
	default "5683"

config COAP_SERVER_SECURE_PORT
	int "CoAP server port number (DTLS/TLS)."
	default "5684"

config DEVICE_IDENTITY
	string "CoAP/device identity."
	default "cali.${imei}"
	help
	   "${imei}" is replaced by the modem's IMEI.

config PROVISIONING_GROUP
	string "CoAP/DTLS provisioning group"
	default "Auto"
	help
	   Device group for provisioning. 

config DTLS_PSK_IDENTITY
	string "CoAP/DTLS PSK identity."
	default DEVICE_IDENTITY
	help
	   "${imei}" is replaced by the modem's IMEI.
	   This only work with Californium's PlugTestServer,
	   which implements "wildcard" identities to
	   make it easier to connect.
	   Don't use this on production or other security
	   relevant use-cases. 

config DTLS_PSK_SECRET_GENERATE
	bool "CoAP/DTLS generate PSK secret."
	help
	   Generate PSK secret. Requires provisioning
	   of the generate secret, either manual or
	   automatically.

config DTLS_PSK_SECRET
	string "CoAP/DTLS PSK secret."
	default "'.fornium'"
	depends on !DTLS_PSK_SECRET_GENERATE
	help
	   PSK secret. Plain text in "''", hexadecimal with
	   prefix ":0x", or base64 as "". 
	   The default only works with Californium's 
	   PlugTestServer, and the "cali.*" wildcard identity.
	   Don't use this on production or other security
	   relevant use-cases. 

config DTLS_ECDSA_PRIVATE_KEY_GENERATE
	bool "CoAP/DTLS generate ECDSA/SECP256R1 device key pair."
	help
	   Generate ECDSA device key pair. Requires provisioning
	   of the generate secret, either manual or automatically.

config DTLS_ECDSA_PRIVATE_KEY
	string "CoAP/DTLS ECDSA/SECP256R1 device private key."
	depends on !DTLS_ECDSA_PRIVATE_KEY_GENERATE
	help
	   ECDSA device private key. Only SECP256R1 is supported.
	   The private key is provided plain (32 bytes) without
	   the algorithm ids or in ASN.1 encoding with algorithm
	   header. The public key is not provided, it will be 
	   derived from the private key. Hexadecimal encoded with 
	   prefix ":0x", or base64 as "". 

config DTLS_ECDSA_TRUSTED_PUBLIC_KEY
	string "CoAP/DTLS ECDSA/SECP256R1 trusted server public key."
	help
	   ECDSA trusted server public key. Only SECP256R1 is supported.
	   Either encoded as ASN.1 (including algorith header) or plain
	   concated public_x and public_y key (64 bytes). Hexadecimal
	   encoded with prefix ":0x", or base64 as "". 

config DTLS_PROVISIONING_DOMAIN
	string "CoAP/DTLS provisioning domain"
	help
	   Domain for provisioning. 

config DTLS_ECDSA_AUTO_PROVISIONING
	bool "Enable auto provisioning."
	help
	   Enable device to execute auto provisioning. Uses 
	   DTLS_ECDSA_AUTO_PROVISIONING_PRIVATE_KEY to register
	   the device credentials at the server. 

config DTLS_ECDSA_AUTO_PROVISIONING_PRIVATE_KEY
	string "CoAP/DTLS ECDSA/SECP256R1 private key for auto provisioning."
	depends on DTLS_ECDSA_AUTO_PROVISIONING
	help
	   ECDSA device private key for provisioning. 
	   Only SECP256R1 is supported. Hexadecimal encoded with 
	   prefix ":0x", or base64 as "".

endmenu
endif

menu "CoAP/DTLS Settings"

config DTLS_ALWAYS_HANDSHAKE
	bool "Use a DTLS handshake for request."
	default n
	help
	   Enable to use a DTLS handshake for each request.
	   Using DTLS 1.2 Connection ID obsoletes such
	   frequent handshakes.

config COAP_WAIT_ON_POWERMANAGER
	bool "Enable CoAP to wait for power-manager before sending"
	default n
	help
	   On startup, the power manager takes up to 30s to get the first 
	   battery values. Delay exchanging application message until that.

config COAP_SEND_INTERVAL
	int "CoAP send interval in seconds. 0 disable"
	default 0

config COAP_FAILURE_SEND_INTERVAL
	int "CoAP send interval after failures in seconds. 0 to use send interval"
	default 0

config COAP_SEND_MODEM_INFO
	bool "Include modem infos in message."
	default y

config COAP_SEND_SIM_INFO
	bool "Include SIM infos in message."
	default y

config COAP_SEND_NETWORK_INFO
	bool "Include network infos in message."
	default y

config COAP_SEND_STATISTIC_INFO
	bool "Include statistic infos in message."
	default y

config COAP_SEND_MINIMAL
	bool "reduce infos in message."
	default n

config COAP_NO_RESPONSE_ENABLE
	bool "Use CoAP NO_RESPONSE option for one-way message"
	default n

if (INIT_SETTINGS)
config COAP_RESOURCE
	string "CoAP resource - defaults to Californium's echo resource"
	default "echo"
	help
	   "${imei}" is replaced by the modem's IMEI.

config COAP_QUERY
	string "CoAP query - enable parameter"
	help
	   "${imei}" is replaced by the modem's IMEI.
		Supported (sandbox):
		delay=<n> (delay response by n sec.)
		rlen=<n> (response length n bytes.)
		ack (use separate response.)
		keep (enable echo keep function.)
		id=<n> (device id, if PSK is not used.)
		Supported (clouddemo, s3-proxy):
		series (enable series function of s3-proxy.)
		forward (enable http-proxy forward.)
		read[=<subpath>] (read sub-resource. Default subpath is "config".)
		write[=<subpath>] (write sub-resource. Default subpath is "${now}".)
endif
endmenu

menu "Modem Settings"

config LTE_LOCK_PLMN_CONFIG_SWITCH
	bool "LTE lock PLMN based on config switch"
	depends on !LTE_LOCK_PLMN && BOARD_NRF9160DK_NRF9160_NS
	default n

config LTE_LOCK_PLMN_CONFIG_SWITCH_STRING_1
	string "PLMN string for configuration switch 1"
	default "26201"
	depends on LTE_LOCK_PLMN_CONFIG_SWITCH
	help
		Mobile Country Code (MCC) and Mobile Network Code (MNC) values.
		Only numeric string formats supported.
		Default: Germany/Telekom

config LTE_LOCK_PLMN_CONFIG_SWITCH_STRING_2
	string "PLMN string for configuration switch 2"
	default "26202"
	depends on LTE_LOCK_PLMN_CONFIG_SWITCH
	help
		Mobile Country Code (MCC) and Mobile Network Code (MNC) values.
		Only numeric string formats supported.
		Default: Germany/Vodafone

config LTE_LOCK_PLMN_CONFIG_SWITCH_STRING_3
	string "PLMN string for configuration switch 3"
	default "26203"
	depends on LTE_LOCK_PLMN_CONFIG_SWITCH
	help
		Mobile Country Code (MCC) and Mobile Network Code (MNC) values.
		Only numeric string formats supported.
		Default: Germany/O2

config LTE_POWER_ON_OFF_ENABLE
	bool "Enable LTE Power On/Off Mode"
	default n

config LTE_POWER_ON_OFF_CONFIG_SWITCH
	bool "Enable LTE Power On/Off configuration switch"
	default n
	depends on !LTE_LOCK_PLMN_CONFIG_SWITCH && !LTE_POWER_ON_OFF_ENABLE && BOARD_NRF9160DK_NRF9160_NS 

config UDP_PSM_ENABLE
	bool "Enable LTE Power Saving Mode"
	depends on !UDP_POWER_ON_OFF_ENABLE
	default y

choice RAI_MODE
	prompt "RAI mode"
	default AS_RAI_ON
	help
	  Configure RAI mode

config RAI_OFF
	bool "Disable RAI"

config AS_RAI_ON
	bool "Enable AS-RAI (Rel. 14)"
	help
	  Use AS-RAI. Requires Rel. 14. If not available, CP-RAI is implicitly used.

config CP_RAI_ON
	bool "Enable CP-RAI (Rel. 13, NB-IoT only!)"
	help
	  Use CP-RAI. Requires Rel. 13, only supported for NB-IoT.

endchoice # RAI_MODE

config UDP_PSM_CONNECT_RAT
	int "PSM RAT on connect"
	depends on UDP_PSM_ENABLE
	default 16

config UDP_PSM_RETRANS_RAT
	int "PSM RAT on retransmissions"
	depends on UDP_PSM_ENABLE
	default 30

config UDP_EDRX_ENABLE
	bool "Enable LTE eDRX"
	default y

config STATIONARY_MODE_ENABLE
	bool "Enable LTE stationary mode"
	default n

config MODEM_SAVE_CONFIG_THRESHOLD
	int "Modem save configuration threshold in seconds. 0s, don't save, 1s always save. Default 60s"
	default 60
	help
	   If the initial network connect takes more than the threshold,
	   the modem is short switched off and on again in order to save
	   the configuration. This speeds up the next start.

config MODEM_MULTI_IMSI_SUPPORT
	bool "Modem multi-IMSI support."
	default n
	help
	   Set default search timeout to 10 minutes.

config MODEM_SEARCH_TIMEOUT
	int "Modem search timeout in seconds."
	default 600 if LTE_MODE_PREFERENCE_NBIOT_PLMN_PRIO || LTE_MODE_PREFERENCE_LTE_M_PLMN_PRIO || MODEM_MULTI_IMSI_SUPPORT
	default 360 if LTE_MODE_PREFERENCE_NBIOT || LTE_MODE_PREFERENCE_LTE_M
	default 180

config MODEM_SEARCH_TIMEOUT_RESTART
	int "Modem search timeout in minutes before restarting the modem."
	default 20

config MODEM_SEARCH_TIMEOUT_REBOOT
	int "Modem initial search timeout in minutes before rebooting the modem."
	default 480

config MODEM_SEARCH_TIMEOUT_IMSI
	int "Modem search timeout in minutes for IMSI selection."
	default 30

config MODEM_ICCID_LTE_M_PREFERENCE
	string "Modem ICCID header list for LTE-M preference."
	default ""
	help
	  List of ICCID header (first 5 digits), which only supports LTE-M.

config MODEM_ICCID_NBIOT_PREFERENCE
	string "Modem ICCID header list for NB-IoT preference."
	default ""
	help
	  List of ICCID header (first 5 digits), which only supports NB-IoT.

config MODEM_ICCID_IMSI_SELECT
	string "Modem ICCID header list for IMSI select support."
	default "89357"
	help
	  List of ICCID header (first 5 digits), which supports IMSI select.

config MODEM_FAULT_THRESHOLD
    int "Threshold for modem faults per week."
	default 2
	depends on NRF_MODEM_LIB_ON_FAULT_APPLICATION_SPECIFIC
	help
	   Threshold for modem faults per week to reboot the device.

config PROTOCOL_CONFIG_SWITCH
	bool "Enable protocol configuration switch"
	default n
	depends on !LTE_LOCK_PLMN_CONFIG_SWITCH && !LTE_POWER_ON_OFF_CONFIG_SWITCH && BOARD_NRF9160DK_NRF9160_NS

choice PROTOCOL_MODE
	prompt "Protocol mode"
	default PROTOCOL_MODE_DTLS
	help
	  Configure udp, dtls

config PROTOCOL_MODE_UDP
	bool "coap"
	help
	  Use coap over udp.

config PROTOCOL_MODE_DTLS
	bool "coaps"
	help
	  Use coap over dtls.

endchoice # PROTOCOL_MODE

# CONFIG_LTE_PROPRIETARY_PSM_REQ           

config LTE_FEATURE_HPPLMN_SKIP
	bool "Skip HPPLMN search. mfw 2.0.0 >= only."
	default y

config LTE_FEATURE_PLMN_SELECT_OPTIMIZATION
	bool "PLMN select optimization. mfw 2.0.1 >= only."
	default y

endmenu

config SH_CMD
    bool "Enable sh cmd support."
	default y
	help
	  Enable support for sh commands. Provides simplified access to
	  selected AT commands without using special characters. 

if (SH_CMD) 

config SH_CMD_TEST
    bool "Enable sh cmd support."
    depends on SH_CMD
	default n
	help
	  Enable support for special sh test commands.
	  Onyl used to test the debugging and fault reporting. 

config SH_CMD_UI_LED_TASK_TEST
    bool "Enable sh cmd for LED task tests."
    depends on SH_CMD
	default n
	help
	  Enable test cmd for LED tasks. 

config SH_CMD_UNLOCK
	bool "Enable unlock/protected cmd"
    depends on SH_CMD
	default y	  

if (SH_CMD_UNLOCK && INIT_SETTINGS) 

config SH_CMD_UNLOCK_PASSWORD
    string "Unlock cmd password."
    default "unlock"
    help
        Must be replaced by secret password!
	   
endif
endif

menu "Extra Functions"

config UART_MANAGER
    bool "Use UART manager for sh-cmd console."
    depends on !ALL_POWER_OFF
	default n

config UART_RX_PULLDOWN
    bool "Use pulldown for RX."
    depends on UART_MANAGER
	default n
	help
	  Use pulldown for RX to ensure UART is suspended, if RX is not connected.

config UART_LED
    bool "Use blue LED as UART indicator."
    depends on UART_MANAGER
    default n
    help
      Use LED to check, if inactivity is detected properly.

config LOG_BACKEND_UART_MANAGER
   bool "Use UART manager as log backend."
   depends on UART_MANAGER && !ALL_POWER_OFF
   default y

config LOG_BACKEND_UART_MANAGER_AUTOSTART
   bool
   depends on LOG_BACKEND_UART_MANAGER
   default y

config UART_UPDATE
    bool "Support firmware update via UART cmd."
	default y
	select BOOTLOADER_MCUBOOT
	select CRC
	select FLASH
	select FLASH_MAP
	select STREAM_FLASH
	select IMG_MANAGER
	depends on LOG_BACKEND_UART_MANAGER && UART_MANAGER && SH_CMD && !ALL_POWER_OFF

config COAP_UPDATE
    bool "Enabel CoAP firmware updates."
	default y
	select BOOTLOADER_MCUBOOT
	select FLASH
	select FLASH_MAP
	select STREAM_FLASH
	select IMG_MANAGER

config UPDATE
	bool
	default y if COAP_UPDATE || UART_UPDATE

config USE_IO_JOB_QUEUE
	bool "Use i/o job queue"
	default y

config SUSPEND_3V3
	bool "Low power mode, suspend 3.3V when sleeping"
	default y
	depends on ALL_POWER_OFF || !LOCATION_ENABLE

config SUSPEND_UART
	bool "Low power mode, suspend UART when sleeping"
	default y if ALL_POWER_OFF || !UART_MANAGER

config LOCATION_ENABLE
	bool "Enable GNSS Location"
	default n
	depends on LTE_NETWORK_MODE_LTE_M_NBIOT_GPS || LTE_NETWORK_MODE_LTE_M_GPS || LTE_NETWORK_MODE_NBIOT_GPS
	help
	   Enable GNSS location. Early development stage.
	   Does not support A-GPS for now. To start GNSS,
	   place the Thingy:91 outside in an open space.
	   Once the almanac data is downloaded from satelites, 
	   positions are start to be reported.

config LOCATION_ENABLE_CONTINUES_MODE
	bool "Enable GNSS Location Continues Mode"
	default y
	depends on LOCATION_ENABLE
	help
	   Enable GNSS location to run continues.
	   Without A-GPS the best positions are achieved
	   when the GPS runs mostly continuesly.
	   This requires a high current of 50mA!  

config LOCATION_ENABLE_TRIGGER_MESSAGE
	bool "Enable GNSS Location Triggers Message"
	default n
	depends on !LOCATION_ENABLE_CONTINUES_MODE && LOCATION_ENABLE
	help
	   Enable GNSS location to trigger a message

config BATTERY_ADC
	bool "Battery voltage ADC measurement"
	default y
	depends on GPIO && ADC && !ALL_POWER_OFF && BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	help
	   Enable battery measurement

config EXT_BATTERY_ADC
	bool "External battery voltage ADC measurement"
	default n
	depends on BATTERY_ADC
	help
	   Enable external battery measurement

config BATTERY_TYPE_LIPO_1350_MAH
	bool
	default y if BOARD_THINGY91_NRF9160_NS
	default y if BOARD_THINGY91X_NRF9151_NS

config BATTERY_TYPE_LIPO_2000_MAH
	bool "LiPo 2000 mAh"
	default y if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	default y if BOARD_CIRCUITDOJO_FEATHER_NRF9161_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS

config BATTERY_TYPE_NIMH_2000_MAH
	bool "NiMH 2000 mAh"
	default y if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	default y if BOARD_CIRCUITDOJO_FEATHER_NRF9161_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS

config BATTERY_TYPE_NIMH_4_2000_MAH
	bool "NiMH/4 2000 mAh"
    help
	   NiMH with 4 cells

config BATTERY_TYPE_SUPER_CAP_LIHY
	bool "SupCap/LiHy 4V/400F"
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS
    help
	   Super CAP, Lithium Hybrid, 4V, 400F

if (INIT_SETTINGS)
config BATTERY_TYPE_DEFAULT
	int "Default battery profile."
	default 1 if BATTERY_TYPE_LIPO_1350_MAH
	default 2 if BATTERY_TYPE_LIPO_2000_MAH
	default 3 if BATTERY_TYPE_NIMH_2000_MAH
	default 4 if BATTERY_TYPE_NIMH_4_2000_MAH
	default 4 if BATTERY_TYPE_SUPER_CAP_LIHY
	default 0 
	help
	  0 := no battery
	  1 := LiPO 1350 mAh (Thingy:91)
	  2 := LiPO 2000 mAh (nRF9160 feather & conexio stratus pro)
	  3 := NiMH 2000 mAh (nRF9160 feather & conexio stratus pro)
	  4 := NiMH/4 2000 mAh (nRF9160 feather & conexio stratus pro)
	  5 := Super CAP, Lithium Hybrid (conexio stratus pro)
endif

config EXPANSION_PORT
	bool "Use expansion port"
	default y
	depends on BOARD_THINGY91X_NRF9151_NS
	help
	   Use Thingy:91X expansion port.

config EXPANSION_PORT_INIT_PRIORITY
	int "Expansion port init priority"
	default 87
	depends on EXPANSION_PORT
	help
	   Thingy:91X expansion port init priority.
	   Must be executed before sensor init.

config ENABLE_EXPANSION_PORT
	bool "Enable expansion port on init"
	depends on EXPANSION_PORT
	help
	   Enable Thingy:91X expansion port.


config NAU7802_SCALE
	bool "Enable NAU7802 scale"
	depends on I2C
	help
	   Enable NAU7802 scale.

config NAU7802_PARALLEL_READ
	bool "Enable parallel channel reads for NAU7802"
	default y
	depends on NAU7802_SCALE	
	help
	   Enable parallel channel reads for NAU7802.
	   Speeds up reading ADC values from two channels.

config NAU7802_DUMMY_CALIBRATION
	bool "Use dummy calibration when calibration is missing"
	default n
	depends on NAU7802_SCALE

config NAU7802_INIT_PRIORITY
	int "NAU7802 init priority"
	default 91
	depends on NAU7802_SCALE
	help
	   NAU7802 init priority.
	   Must be executed after i2c driver init.

config ADC_SCALE
	bool
	default y
	depends on NAU7802_SCALE

if SENSOR

if ADP536X

config ADP536X_POWER_MANAGEMENT
	bool "Enable ADP536X Power Management"
	default y
	help
	   Enable battery level and charging state monitor.

config ADP536X_POWER_MANAGEMENT_LOW_POWER
	bool "Enable ADP536X Power Management Sleeping Mode"
	default y
	depends on ADP536X_POWER_MANAGEMENT
	help
	   Enable power management sleeping mode. Check
	   battery level only every 8 minutes.
	   
endif # ADP536X

if MFD_NPM1300

config MFD_NPM1300_BUCK2_WITH_USB
    bool "Enable/disable npm1300 buck2 with USB"
    default y if BOARD_CIRCUITDOJO_FEATHER_NRF9161_NS
    depends on REGULATOR_NPM1300
    help
       Enable/disable buck2 (RP2040) when powered by USB.

config MFD_NPM1300_BUCK2_LED
    bool "Use LED to indicate buck2 status"
    depends on REGULATOR_NPM1300
    help
       Use LED to indicate buck2 status.

config MFD_NPM1300_DISABLE_NTC
	bool
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	default y if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS

endif # MFD_NPM1300

if INA219

config INA219_MODE_POWER_MANAGER
	bool "INA219 power manager"

endif # INA219



choice BATTERY_VOLTAGE_SOURCE
	prompt "Battery voltage source"
	default BATTERY_VOLTAGE_SOURCE_ADP536X if BOARD_THINGY91_NRF9160_NS
	default BATTERY_VOLTAGE_SOURCE_ADC if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	default BATTERY_VOLTAGE_SOURCE_MODEM
	help
	  Configure battery voltage source.

config BATTERY_VOLTAGE_SOURCE_ADP536X
	bool "Battery voltage source ADP536X (Thingy:91)"

config BATTERY_VOLTAGE_SOURCE_ADC
	bool "Battery voltage source ADC (feater nRF9160)"
	depends on BATTERY_ADC

config BATTERY_VOLTAGE_SOURCE_MODEM
	bool "Battery voltage source modem"

endchoice # BATTERY_VOLTAGE_SOURCE


config MOTION_SENSOR
    bool
    default y if ADXL362 || LIS2DH

if ADXL362

config MOTION_DETECTION
	bool "Enable Motion Detection"
	default y if ADXL362_TRIGGER
	help
	   Enable (indirect) motion detection using accelerometer.
	   More configuration options are available at 
	   "Zephyr Kernel > Device Drivers > Sensor Drivers > ADXL362 sensor"
endif # ADXL362

if LIS2DH

config MOTION_DETECTION
	bool "Enable Motion Detection"
	default y if LIS2DH_TRIGGER
	help
	   Enable (indirect) motion detection using accelerometer.
	   More configuration options are available at 
	   "Zephyr Kernel > Device Drivers > Sensor Drivers > LIS2DH Three Axis Accelerometer (LIS2DH)"

config MOTION_DETECTION_FILTER
	bool "Enable Motion Detection Filter"
	select LIS2DH_ACCEL_HP_FILTERS
	default y if LIS2DH_TRIGGER


endif # LIS2DH

if MOTION_DETECTION

config MOTION_DETECTION_LED
	bool "Enable Motion Detection LED"
	default n
	help
	   Enable LED to signal motion detection using accelerometer.

endif # MOTION_DETECTION

config BME680_BSEC
	bool "BME680 BSEC"
	depends on !BME680
	help
	  Use BME680 with Bosch BSEC library (IAQ Index Air Quality).
	  The library itself must be downloaded from Bosch Sensortec
	  and placed in "<ncs>/nrf/ext/BSEC_1.4.8.0_Generic_Release_updated_v3"
	  Disable "Zephyr Kernel > Device Drivers > Sensor Drivers > BME680 sensor"
	  in order to use the BME680 with the Bosch BSEC library! Enable 
	  the BME680 sensor to use it without the Bosch BSEC library! 

if BME680_BSEC

config BME680_BSEC_THREAD_STACK_SIZE
	int "BSEC thread stack size"
	default 4096

choice BME680_BSEC_SAMPLE_MODE
	prompt "Bosch BSEC sample mode"
	default BME680_BSEC_SAMPLE_MODE_LOW_POWER
	help
	  Configure sample interval. BSEC support 3s or 300s

config BME680_BSEC_SAMPLE_MODE_LOW_POWER
	bool "BSEC low power mode"
	help
	  Sample data from BSEC every 0.33333 Hz (3 second interval).

config BME680_BSEC_SAMPLE_MODE_ULTRA_LOW_POWER
	bool "BSEC ultra low power mode"
	help
	  Sample data from BSEC every 0.0033333 Hz (300 second interval).

endchoice # BME680_BSEC_SAMPLE_MODE

endif # BME680_BSEC

config ENVIRONMENT_SENSOR
    bool
    default y if BME680_BSEC || BME680 || SHT3XD || DS18B20

if ENVIRONMENT_SENSOR

config TEMPERATURE_OFFSET
	int "Temperature offset in degree celsius multiplied by 100."
	default 0
	help
	  Temperature offset. To account for external heat sources on the board.
	  The provided value is divided by 100. This is due to the Kconfig parser
	  not supporting floating point types.
	  Using CoAP / DTLS CID lowers the energy consumption and also the 
	  self-heating a lot. Therefore the default value of 120 for the Thingy:91
	  is set to 0.

endif # ENVIRONMENT_SENSOR

if BME680 || SHT3XD || DS18B20

config SAMPLE_INTERVAL_S
	int "Minimal sample interval for environment sensor in seconds."
	default 10

endif # BME680 || SHT3XD || DS18B20

endif # SENSOR

config SHT21
	bool "SHT21 external temperature sensor"
	depends on I2C && !ENVIRONMENT_SENSOR
	help
	  Use external SHT21 for temperature. 

endmenu

if ENVIRONMENT_SENSOR || SHT21

config ENVIRONMENT_HISTORY_SIZE
	int "Environment history size. 0 to disable history."
	default 12

config ENVIRONMENT_HISTORY_INTERVAL_S
	int "Environment history interval in seconds"
	default 30

endif

config DISABLE_REALTIME_CLOCK
	bool "Disable unused realtime clock (nRF9160 feather only!)"
	default y
	depends on I2C && BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS

config DISABLE_BMM350
	bool "Disable BMM350 (Thingy:91X only!)"
	default y
	depends on I2C && BOARD_THINGY91X_NRF9151_NS

if FLASH
config FLASH_APPL_STORAGE
	bool "Flash support for application storage."
	default y
    depends on !ALL_POWER_OFF
endif

if EEPROM
config EEPROM_APPL_STORAGE
	bool "EEPROM support for application storage."
	default y
    depends on !ALL_POWER_OFF
endif

# Application/HW Model

config APPL_MODEL
	string "Application model."
	default "dk" if BOARD_NRF9160DK_NRF9160_NS
	default "dk2" if BOARD_NRF9161DK_NRF9161_NS
	default "ty" if BOARD_THINGY91_NRF9160_NS
	default "txsc" if BOARD_THINGY91X_NRF9151_NS && ADC_SCALE
	default "tx" if BOARD_THINGY91X_NRF9151_NS
	default "sc" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS && ADC_SCALE
	default "bm" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS && EXT_BATTERY_ADC
	default "fh" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	default "f1" if BOARD_CIRCUITDOJO_FEATHER_NRF9161_NS
	default "csp" if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS
	default "cs51" if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	help
		Select firmware for model. 

config APPL_MODEL_DESCRIPTION
	string "Application model description."
	default "nRF9160-DK" if BOARD_NRF9160DK_NRF9160_NS
	default "nRF9161-DK" if BOARD_NRF9161DK_NRF9161_NS
	default "Thingy:91" if BOARD_THINGY91_NRF9160_NS
	default "Thingy:91X scale" if BOARD_THINGY91X_NRF9151_NS && ADC_SCALE
	default "Thingy:91X" if BOARD_THINGY91X_NRF9151_NS
	default "nRF9160-scale" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS && ADC_SCALE
	default "nRF9160-monitor" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS && EXT_BATTERY_ADC
	default "nRF9160-feather" if BOARD_CIRCUITDOJO_FEATHER_NRF9160_NS
	default "nRF9161-feather" if BOARD_CIRCUITDOJO_FEATHER_NRF9161_NS
	default "conexio-nRF9151" if BOARD_CONEXIO_STRATUS_PRO_NRF9151_NS
	default "conexio-nRF9161" if BOARD_CONEXIO_STRATUS_PRO_NRF9161_NS
	help
		Select description for model. 

# Logging

module = COAP_CLIENT
module-str = CoAP Client
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

module = UI
module-str = UI
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

module = MODEM
module-str = Modem
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

if UART_MANAGER
module = UART_MANAGER
module-str = UART
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif

if FLASH || EEPROM
module = STORAGE
module-str = Storage
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif

if ADC_SCALE
module = SCALE
module-str = Scale
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif

if LOCATION_ENABLE
module = GNSS_CLIENT
module-str = GNSS Client
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif

source "${ZEPHYR_BASE}/subsys/logging/Kconfig.formatting"

menu "Zephyr Kernel"
source "Kconfig.zephyr"
endmenu
